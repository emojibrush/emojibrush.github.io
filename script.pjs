var cmdKeyPressed = false;
var url;
var elems = [];
var tmpElems;
var currentColor = 'red';

document.addEventListener('keydown', function(e) {
  if (e.keyCode === 91) {
    cmdKeyPressed = true;
  }

  if (cmdKeyPressed && e.keyCode === 90) {
    undo();
  }
}, false);

document.addEventListener('keyup', function(e) {
  if (e.keyCode === 91) {
    cmdKeyPressed = false;
  }
}, false);

var links = document.getElementsByClassName('color');
Array.prototype.slice.call(links).forEach(function(link) {
  link.addEventListener('click', function(e) {
    currentColor = e.currentTarget.getAttribute('data-color');
  }, false);
});

function undo() {
  if (elems.length) {
    var arr = elems[elems.length - 1];
    for (var i = 0; i < arr.length; i++) {
      arr[i].remove();
    }
    elems.pop();
    paper.view.draw();
  }
}

function onMouseDown() {
  tmpElems = [];
  // var images = colors[currentColor];
  // var random = Math.floor(Math.random() * images.length);
  // var image = images[random];
  // url = 'images/' + currentColor + '/' + image;
}

function onMouseDrag(event) {
  var images = colors[currentColor];
  var random = Math.floor(Math.random() * images.length);
  var image = images[random];
  url = 'images/' + currentColor + '/' + image;
  var radius = Math.min(Math.max(Math.abs(event.delta.y), Math.abs(event.delta.x)), 160);
  var raster = new Raster()
  raster.opacity = 0;
  raster.onLoad = function() {
    this.size = new Size(radius, radius);
    this.opacity = 1;
  }
  raster.source = url;
  raster.position = event.point;
  tmpElems.push(raster);
}

function onMouseUp() {
  if (tmpElems.length) {
    elems.push(tmpElems.splice(0));
  }
  tmpElems = null;
}
